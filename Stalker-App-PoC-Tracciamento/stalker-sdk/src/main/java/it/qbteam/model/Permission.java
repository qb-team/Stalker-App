/**
 * Stalker API
 * API di Stalker di Imola Informatica sviluppato da qbteam
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: qbteamswe@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package it.qbteam.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * What can or cannot do an organization&#39;s administrator.
 **/
@ApiModel(description = "What can or cannot do an organization's administrator.")
public class Permission {
  
  @SerializedName("administratorId")
  private String administratorId = null;
  @SerializedName("organizationId")
  private Long organizationId = null;
  public enum PermissionEnum {
     owner,  manager,  viewer, 
  };
  @SerializedName("permission")
  private PermissionEnum permission = null;

  /**
   * Authentication service's administrator unique identifier.
   **/
  @ApiModelProperty(value = "Authentication service's administrator unique identifier.")
  public String getAdministratorId() {
    return administratorId;
  }
  public void setAdministratorId(String administratorId) {
    this.administratorId = administratorId;
  }

  /**
   * Unique identifier of the organization the administrator is part of.
   **/
  @ApiModelProperty(required = true, value = "Unique identifier of the organization the administrator is part of.")
  public Long getOrganizationId() {
    return organizationId;
  }
  public void setOrganizationId(Long organizationId) {
    this.organizationId = organizationId;
  }

  /**
   * What can or cannot do an organization's administrator. Owner is the highest level of permissions while viewer is the lowest.
   **/
  @ApiModelProperty(required = true, value = "What can or cannot do an organization's administrator. Owner is the highest level of permissions while viewer is the lowest.")
  public PermissionEnum getPermission() {
    return permission;
  }
  public void setPermission(PermissionEnum permission) {
    this.permission = permission;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Permission permission = (Permission) o;
    return (this.administratorId == null ? permission.administratorId == null : this.administratorId.equals(permission.administratorId)) &&
        (this.organizationId == null ? permission.organizationId == null : this.organizationId.equals(permission.organizationId)) &&
        (this.permission == null ? permission.permission == null : this.permission.equals(permission.permission));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.administratorId == null ? 0: this.administratorId.hashCode());
    result = 31 * result + (this.organizationId == null ? 0: this.organizationId.hashCode());
    result = 31 * result + (this.permission == null ? 0: this.permission.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Permission {\n");
    
    sb.append("  administratorId: ").append(administratorId).append("\n");
    sb.append("  organizationId: ").append(organizationId).append("\n");
    sb.append("  permission: ").append(permission).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
