group = 'it.qbteam'
project.version = '0.0.1'

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.2'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}


apply plugin: 'com.android.library'




android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }

}


ext {
    swagger_annotations_version = "1.5.0"
    gson_version = "2.3.1"
    httpmime_version = "4.5.2"
    httpcore_version = "4.4.4"

    volley_version = "1.0.0"
    junit_version = "4.13"
    robolectric_version = "3.0"
    concurrent_unit_version = "0.4.2"
}

dependencies {
    implementation "io.swagger:swagger-annotations:$swagger_annotations_version"
    implementation "com.google.code.gson:gson:$gson_version"
    implementation "org.apache.httpcomponents:httpcore:$httpcore_version"
    implementation "org.apache.httpcomponents:httpmime:$httpmime_version"

    implementation "com.android.volley:volley:1.1.1"
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.robolectric:robolectric:${robolectric_version}"
    testImplementation "net.jodah:concurrentunit:${concurrent_unit_version}"
}

afterEvaluate {
    android.libraryVariants.all { variant ->
        def task = project.tasks.create "jar${variant.name.capitalize()}", Jar
        task.description = "Create jar artifact for ${variant.name}"
        task.dependsOn variant.javaCompile
        task.from variant.javaCompile.destinationDir
        task.destinationDir = project.file("${project.buildDir}/outputs/jar")
        task.archiveName = "${project.name}-${variant.baseName}-${version}.jar"
        artifacts.add('archives', task);
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}
