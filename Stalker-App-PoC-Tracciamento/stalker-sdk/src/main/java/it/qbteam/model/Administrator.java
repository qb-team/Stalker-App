/**
 * Stalker API
 * API di Stalker di Imola Informatica sviluppato da qbteam
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: qbteamswe@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package it.qbteam.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Administrator {
  
  @SerializedName("administratorId")
  private String administratorId = null;
  @SerializedName("ldapId")
  private Integer ldapId = null;

  /**
   * Authentication service's administrator unique identifier.
   **/
  @ApiModelProperty(required = true, value = "Authentication service's administrator unique identifier.")
  public String getAdministratorId() {
    return administratorId;
  }
  public void setAdministratorId(String administratorId) {
    this.administratorId = administratorId;
  }

  /**
   * Organization LDAP server's administrator unique identifier.
   **/
  @ApiModelProperty(value = "Organization LDAP server's administrator unique identifier.")
  public Integer getLdapId() {
    return ldapId;
  }
  public void setLdapId(Integer ldapId) {
    this.ldapId = ldapId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Administrator administrator = (Administrator) o;
    return (this.administratorId == null ? administrator.administratorId == null : this.administratorId.equals(administrator.administratorId)) &&
        (this.ldapId == null ? administrator.ldapId == null : this.ldapId.equals(administrator.ldapId));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.administratorId == null ? 0: this.administratorId.hashCode());
    result = 31 * result + (this.ldapId == null ? 0: this.ldapId.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Administrator {\n");
    
    sb.append("  administratorId: ").append(administratorId).append("\n");
    sb.append("  ldapId: ").append(ldapId).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
