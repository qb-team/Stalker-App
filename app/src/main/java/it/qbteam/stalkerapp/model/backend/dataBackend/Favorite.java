/*
 * Stalker API
 * API di Stalker di Imola Informatica sviluppato da qbteam
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: qbteamswe@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package it.qbteam.stalkerapp.model.backend.dataBackend;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import javax.validation.constraints.*;
import javax.validation.Valid;


/**
 * Link between the user and the organization: only the organization which users set to be their favorite can track their movements.
 */
@ApiModel(description = "Link between the user and the organization: only the organization which users set to be their favorite can track their movements.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-05-02T17:39:19.016+02:00[Europe/Rome]")
public class Favorite {
  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_ORGANIZATION_ID = "organizationId";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_ID)
  private Long organizationId;

  public static final String SERIALIZED_NAME_ORG_AUTH_SERVER_ID = "orgAuthServerId";
  @SerializedName(SERIALIZED_NAME_ORG_AUTH_SERVER_ID)
  private String orgAuthServerId;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private OffsetDateTime creationDate;


  public Favorite userId(String userId) {

    this.userId = userId;
    return this;
  }

  /**
   * Authentication service&#39;s user unique identifier.
   * @return userId
   **/
  @NotNull
  @Size(max=256)  @ApiModelProperty(required = true, value = "Authentication service's user unique identifier.")

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    this.userId = userId;
  }


  public Favorite organizationId(Long organizationId) {

    this.organizationId = organizationId;
    return this;
  }

  /**
   * Unique identifier of the organization the user sets as favorite.
   * minimum: 1
   * @return organizationId
   **/
  @NotNull
  @Min(1L)  @ApiModelProperty(required = true, value = "Unique identifier of the organization the user sets as favorite.")

  public Long getOrganizationId() {
    return organizationId;
  }


  public void setOrganizationId(Long organizationId) {
    this.organizationId = organizationId;
  }


  public Favorite orgAuthServerId(String orgAuthServerId) {

    this.orgAuthServerId = orgAuthServerId;
    return this;
  }

  /**
   * User unique identifier from the authentication server of the organization.
   * @return orgAuthServerId
   **/
  @javax.annotation.Nullable
  @Size(max=256)  @ApiModelProperty(value = "User unique identifier from the authentication server of the organization.")

  public String getOrgAuthServerId() {
    return orgAuthServerId;
  }


  public void setOrgAuthServerId(String orgAuthServerId) {
    this.orgAuthServerId = orgAuthServerId;
  }


  public Favorite creationDate(OffsetDateTime creationDate) {

    this.creationDate = creationDate;
    return this;
  }

  /**
   * When the favorite was added by the user.
   * @return creationDate
   **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "When the favorite was added by the user.")

  public OffsetDateTime getCreationDate() {
    return creationDate;
  }


  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Favorite favorite = (Favorite) o;
    return Objects.equals(this.userId, favorite.userId) &&
            Objects.equals(this.organizationId, favorite.organizationId) &&
            Objects.equals(this.orgAuthServerId, favorite.orgAuthServerId) &&
            Objects.equals(this.creationDate, favorite.creationDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, organizationId, orgAuthServerId, creationDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Favorite {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    orgAuthServerId: ").append(toIndentedString(orgAuthServerId)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

