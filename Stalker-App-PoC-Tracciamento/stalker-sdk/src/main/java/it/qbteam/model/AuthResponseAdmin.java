/**
 * Stalker API
 * API di Stalker di Imola Informatica sviluppato da qbteam
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: qbteamswe@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package it.qbteam.model;

import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Data given to the admin when authenticated.
 **/
@ApiModel(description = "Data given to the admin when authenticated.")
public class AuthResponseAdmin {
  
  @SerializedName("token")
  private String token = null;
  @SerializedName("expirationDate")
  private Date expirationDate = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getToken() {
    return token;
  }
  public void setToken(String token) {
    this.token = token;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Date getExpirationDate() {
    return expirationDate;
  }
  public void setExpirationDate(Date expirationDate) {
    this.expirationDate = expirationDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthResponseAdmin authResponseAdmin = (AuthResponseAdmin) o;
    return (this.token == null ? authResponseAdmin.token == null : this.token.equals(authResponseAdmin.token)) &&
        (this.expirationDate == null ? authResponseAdmin.expirationDate == null : this.expirationDate.equals(authResponseAdmin.expirationDate));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.token == null ? 0: this.token.hashCode());
    result = 31 * result + (this.expirationDate == null ? 0: this.expirationDate.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthResponseAdmin {\n");
    
    sb.append("  token: ").append(token).append("\n");
    sb.append("  expirationDate: ").append(expirationDate).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
