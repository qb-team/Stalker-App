/**
 * Stalker API
 * API di Stalker di Imola Informatica sviluppato da qbteam
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: qbteamswe@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package it.qbteam.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Area of an organization subjected to tracking.
 **/
@ApiModel(description = "Area of an organization subjected to tracking.")
public class Place {
  
  @SerializedName("id")
  private Long id = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("organizationId")
  private Long organizationId = null;
  @SerializedName("trackingArea")
  private String trackingArea = null;

  /**
   * Unique identifier for a place of an organization.
   **/
  @ApiModelProperty(required = true, value = "Unique identifier for a place of an organization.")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }

  /**
   * Name describing the place. If not set by user it gets automatically filled.
   **/
  @ApiModelProperty(value = "Name describing the place. If not set by user it gets automatically filled.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Unique identifier of the organization the place is part of.
   **/
  @ApiModelProperty(required = true, value = "Unique identifier of the organization the place is part of.")
  public Long getOrganizationId() {
    return organizationId;
  }
  public void setOrganizationId(Long organizationId) {
    this.organizationId = organizationId;
  }

  /**
   * rea subjected to movement tracking of people. It is a collection of (longitude, latitude) pairs consisting in a polygon. The string is expressed in JSON format.
   **/
  @ApiModelProperty(required = true, value = "rea subjected to movement tracking of people. It is a collection of (longitude, latitude) pairs consisting in a polygon. The string is expressed in JSON format.")
  public String getTrackingArea() {
    return trackingArea;
  }
  public void setTrackingArea(String trackingArea) {
    this.trackingArea = trackingArea;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Place place = (Place) o;
    return (this.id == null ? place.id == null : this.id.equals(place.id)) &&
        (this.name == null ? place.name == null : this.name.equals(place.name)) &&
        (this.organizationId == null ? place.organizationId == null : this.organizationId.equals(place.organizationId)) &&
        (this.trackingArea == null ? place.trackingArea == null : this.trackingArea.equals(place.trackingArea));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.organizationId == null ? 0: this.organizationId.hashCode());
    result = 31 * result + (this.trackingArea == null ? 0: this.trackingArea.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Place {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  organizationId: ").append(organizationId).append("\n");
    sb.append("  trackingArea: ").append(trackingArea).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
