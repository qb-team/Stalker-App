/**
 * Stalker API
 * API di Stalker di Imola Informatica sviluppato da qbteam
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: qbteamswe@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package it.qbteam.model;

import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Subject interested in tracking people&#39;s presence inside its own places, in either an anonymous or authenticated way.
 **/
@ApiModel(description = "Subject interested in tracking people's presence inside its own places, in either an anonymous or authenticated way.")
public class Organization {
  
  @SerializedName("id")
  private Long id = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("description")
  private String description = null;
  @SerializedName("image")
  private String image = null;
  @SerializedName("street")
  private String street = null;
  @SerializedName("number")
  private String number = null;
  @SerializedName("postCode")
  private Integer postCode = null;
  @SerializedName("city")
  private String city = null;
  @SerializedName("country")
  private String country = null;
  @SerializedName("authenticationServerURL")
  private String authenticationServerURL = null;
  @SerializedName("creationDate")
  private Date creationDate = null;
  @SerializedName("lastChangeDate")
  private Date lastChangeDate = null;
  @SerializedName("trackingArea")
  private String trackingArea = null;
  public enum TrackingModeEnum {
     authenticated,  anonymous, 
  };
  @SerializedName("trackingMode")
  private TrackingModeEnum trackingMode = null;

  /**
   * Unique identifier for an organization.
   **/
  @ApiModelProperty(required = true, value = "Unique identifier for an organization.")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }

  /**
   * Name of the organization.
   **/
  @ApiModelProperty(required = true, value = "Name of the organization.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Small description of what the organization does.
   **/
  @ApiModelProperty(value = "Small description of what the organization does.")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * Image/logo for the organization which gets shown on the application.
   **/
  @ApiModelProperty(value = "Image/logo for the organization which gets shown on the application.")
  public String getImage() {
    return image;
  }
  public void setImage(String image) {
    this.image = image;
  }

  /**
   * The street where the organization is located.
   **/
  @ApiModelProperty(required = true, value = "The street where the organization is located.")
  public String getStreet() {
    return street;
  }
  public void setStreet(String street) {
    this.street = street;
  }

  /**
   * The number in the street where the organization is located.
   **/
  @ApiModelProperty(required = true, value = "The number in the street where the organization is located.")
  public String getNumber() {
    return number;
  }
  public void setNumber(String number) {
    this.number = number;
  }

  /**
   * The postcode where the organization is located.
   **/
  @ApiModelProperty(value = "The postcode where the organization is located.")
  public Integer getPostCode() {
    return postCode;
  }
  public void setPostCode(Integer postCode) {
    this.postCode = postCode;
  }

  /**
   * The city where the organization is located.
   **/
  @ApiModelProperty(required = true, value = "The city where the organization is located.")
  public String getCity() {
    return city;
  }
  public void setCity(String city) {
    this.city = city;
  }

  /**
   * The country where the organization is located.
   **/
  @ApiModelProperty(required = true, value = "The country where the organization is located.")
  public String getCountry() {
    return country;
  }
  public void setCountry(String country) {
    this.country = country;
  }

  /**
   * URL or IP address of the authentication server of the organization. If it's required a specific port or protocol it must be specified. Needed only if trackingMethod is set to authenticated.
   **/
  @ApiModelProperty(value = "URL or IP address of the authentication server of the organization. If it's required a specific port or protocol it must be specified. Needed only if trackingMethod is set to authenticated.")
  public String getAuthenticationServerURL() {
    return authenticationServerURL;
  }
  public void setAuthenticationServerURL(String authenticationServerURL) {
    this.authenticationServerURL = authenticationServerURL;
  }

  /**
   * When the organization was added to the system.
   **/
  @ApiModelProperty(required = true, value = "When the organization was added to the system.")
  public Date getCreationDate() {
    return creationDate;
  }
  public void setCreationDate(Date creationDate) {
    this.creationDate = creationDate;
  }

  /**
   * When the organization parameters were last changed.
   **/
  @ApiModelProperty(value = "When the organization parameters were last changed.")
  public Date getLastChangeDate() {
    return lastChangeDate;
  }
  public void setLastChangeDate(Date lastChangeDate) {
    this.lastChangeDate = lastChangeDate;
  }

  /**
   * Area subjected to movement tracking of people. It is a collection of (longitude, latitude) pairs consisting in a polygon. The string is expressed in JSON format.
   **/
  @ApiModelProperty(required = true, value = "Area subjected to movement tracking of people. It is a collection of (longitude, latitude) pairs consisting in a polygon. The string is expressed in JSON format.")
  public String getTrackingArea() {
    return trackingArea;
  }
  public void setTrackingArea(String trackingArea) {
    this.trackingArea = trackingArea;
  }

  /**
   * How an user who added to its favorites the organization can be tracked inside the organization's trackingArea and its places.
   **/
  @ApiModelProperty(required = true, value = "How an user who added to its favorites the organization can be tracked inside the organization's trackingArea and its places.")
  public TrackingModeEnum getTrackingMode() {
    return trackingMode;
  }
  public void setTrackingMode(TrackingModeEnum trackingMode) {
    this.trackingMode = trackingMode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Organization organization = (Organization) o;
    return (this.id == null ? organization.id == null : this.id.equals(organization.id)) &&
        (this.name == null ? organization.name == null : this.name.equals(organization.name)) &&
        (this.description == null ? organization.description == null : this.description.equals(organization.description)) &&
        (this.image == null ? organization.image == null : this.image.equals(organization.image)) &&
        (this.street == null ? organization.street == null : this.street.equals(organization.street)) &&
        (this.number == null ? organization.number == null : this.number.equals(organization.number)) &&
        (this.postCode == null ? organization.postCode == null : this.postCode.equals(organization.postCode)) &&
        (this.city == null ? organization.city == null : this.city.equals(organization.city)) &&
        (this.country == null ? organization.country == null : this.country.equals(organization.country)) &&
        (this.authenticationServerURL == null ? organization.authenticationServerURL == null : this.authenticationServerURL.equals(organization.authenticationServerURL)) &&
        (this.creationDate == null ? organization.creationDate == null : this.creationDate.equals(organization.creationDate)) &&
        (this.lastChangeDate == null ? organization.lastChangeDate == null : this.lastChangeDate.equals(organization.lastChangeDate)) &&
        (this.trackingArea == null ? organization.trackingArea == null : this.trackingArea.equals(organization.trackingArea)) &&
        (this.trackingMode == null ? organization.trackingMode == null : this.trackingMode.equals(organization.trackingMode));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.image == null ? 0: this.image.hashCode());
    result = 31 * result + (this.street == null ? 0: this.street.hashCode());
    result = 31 * result + (this.number == null ? 0: this.number.hashCode());
    result = 31 * result + (this.postCode == null ? 0: this.postCode.hashCode());
    result = 31 * result + (this.city == null ? 0: this.city.hashCode());
    result = 31 * result + (this.country == null ? 0: this.country.hashCode());
    result = 31 * result + (this.authenticationServerURL == null ? 0: this.authenticationServerURL.hashCode());
    result = 31 * result + (this.creationDate == null ? 0: this.creationDate.hashCode());
    result = 31 * result + (this.lastChangeDate == null ? 0: this.lastChangeDate.hashCode());
    result = 31 * result + (this.trackingArea == null ? 0: this.trackingArea.hashCode());
    result = 31 * result + (this.trackingMode == null ? 0: this.trackingMode.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Organization {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  image: ").append(image).append("\n");
    sb.append("  street: ").append(street).append("\n");
    sb.append("  number: ").append(number).append("\n");
    sb.append("  postCode: ").append(postCode).append("\n");
    sb.append("  city: ").append(city).append("\n");
    sb.append("  country: ").append(country).append("\n");
    sb.append("  authenticationServerURL: ").append(authenticationServerURL).append("\n");
    sb.append("  creationDate: ").append(creationDate).append("\n");
    sb.append("  lastChangeDate: ").append(lastChangeDate).append("\n");
    sb.append("  trackingArea: ").append(trackingArea).append("\n");
    sb.append("  trackingMode: ").append(trackingMode).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
