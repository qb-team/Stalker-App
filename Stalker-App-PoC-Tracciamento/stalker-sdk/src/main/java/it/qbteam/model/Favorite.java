/**
 * Stalker API
 * API di Stalker di Imola Informatica sviluppato da qbteam
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: qbteamswe@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package it.qbteam.model;

import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Link between the user and the organization: only the organization which users sets to be their favorite can track their movements.
 **/
@ApiModel(description = "Link between the user and the organization: only the organization which users sets to be their favorite can track their movements.")
public class Favorite {
  
  @SerializedName("userId")
  private String userId = null;
  @SerializedName("organizationId")
  private Long organizationId = null;
  @SerializedName("creationDate")
  private Date creationDate = null;

  /**
   * Authentication service's user unique identifier.
   **/
  @ApiModelProperty(required = true, value = "Authentication service's user unique identifier.")
  public String getUserId() {
    return userId;
  }
  public void setUserId(String userId) {
    this.userId = userId;
  }

  /**
   * Unique identifier of the organization the user sets as favorite.
   **/
  @ApiModelProperty(required = true, value = "Unique identifier of the organization the user sets as favorite.")
  public Long getOrganizationId() {
    return organizationId;
  }
  public void setOrganizationId(Long organizationId) {
    this.organizationId = organizationId;
  }

  /**
   * When the favorite was added by the user.
   **/
  @ApiModelProperty(required = true, value = "When the favorite was added by the user.")
  public Date getCreationDate() {
    return creationDate;
  }
  public void setCreationDate(Date creationDate) {
    this.creationDate = creationDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Favorite favorite = (Favorite) o;
    return (this.userId == null ? favorite.userId == null : this.userId.equals(favorite.userId)) &&
        (this.organizationId == null ? favorite.organizationId == null : this.organizationId.equals(favorite.organizationId)) &&
        (this.creationDate == null ? favorite.creationDate == null : this.creationDate.equals(favorite.creationDate));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.userId == null ? 0: this.userId.hashCode());
    result = 31 * result + (this.organizationId == null ? 0: this.organizationId.hashCode());
    result = 31 * result + (this.creationDate == null ? 0: this.creationDate.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Favorite {\n");
    
    sb.append("  userId: ").append(userId).append("\n");
    sb.append("  organizationId: ").append(organizationId).append("\n");
    sb.append("  creationDate: ").append(creationDate).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
