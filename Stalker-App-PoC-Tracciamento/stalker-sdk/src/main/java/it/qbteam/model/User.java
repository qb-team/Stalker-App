/**
 * Stalker API
 * API di Stalker di Imola Informatica sviluppato da qbteam
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: qbteamswe@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package it.qbteam.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class User {
  
  @SerializedName("userId")
  private String userId = null;
  @SerializedName("ldapId")
  private Integer ldapId = null;

  /**
   * Authentication service's user unique identifier.
   **/
  @ApiModelProperty(required = true, value = "Authentication service's user unique identifier.")
  public String getUserId() {
    return userId;
  }
  public void setUserId(String userId) {
    this.userId = userId;
  }

  /**
   * Organization LDAP server's user unique identifier.
   **/
  @ApiModelProperty(value = "Organization LDAP server's user unique identifier.")
  public Integer getLdapId() {
    return ldapId;
  }
  public void setLdapId(Integer ldapId) {
    this.ldapId = ldapId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return (this.userId == null ? user.userId == null : this.userId.equals(user.userId)) &&
        (this.ldapId == null ? user.ldapId == null : this.ldapId.equals(user.ldapId));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.userId == null ? 0: this.userId.hashCode());
    result = 31 * result + (this.ldapId == null ? 0: this.ldapId.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");
    
    sb.append("  userId: ").append(userId).append("\n");
    sb.append("  ldapId: ").append(ldapId).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
