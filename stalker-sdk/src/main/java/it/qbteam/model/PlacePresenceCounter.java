/**
 * Stalker API
 * API di Stalker di Imola Informatica sviluppato da qbteam
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: qbteamswe@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package it.qbteam.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Number of people currently inside a place of an organization.
 **/
@ApiModel(description = "Number of people currently inside a place of an organization.")
public class PlacePresenceCounter {
  
  @SerializedName("placeId")
  private Long placeId = null;
  @SerializedName("counter")
  private Integer counter = null;

  /**
   * Unique identifier of the place.
   **/
  @ApiModelProperty(required = true, value = "Unique identifier of the place.")
  public Long getPlaceId() {
    return placeId;
  }
  public void setPlaceId(Long placeId) {
    this.placeId = placeId;
  }

  /**
   * Number of people currently inside a place of an organization.
   **/
  @ApiModelProperty(required = true, value = "Number of people currently inside a place of an organization.")
  public Integer getCounter() {
    return counter;
  }
  public void setCounter(Integer counter) {
    this.counter = counter;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlacePresenceCounter placePresenceCounter = (PlacePresenceCounter) o;
    return (this.placeId == null ? placePresenceCounter.placeId == null : this.placeId.equals(placePresenceCounter.placeId)) &&
        (this.counter == null ? placePresenceCounter.counter == null : this.counter.equals(placePresenceCounter.counter));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.placeId == null ? 0: this.placeId.hashCode());
    result = 31 * result + (this.counter == null ? 0: this.counter.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlacePresenceCounter {\n");
    
    sb.append("  placeId: ").append(placeId).append("\n");
    sb.append("  counter: ").append(counter).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
